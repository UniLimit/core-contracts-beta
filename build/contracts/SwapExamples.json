{
  "contractName": "SwapExamples",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swapExactInputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMaximum",
          "type": "uint256"
        }
      ],
      "name": "swapExactOutputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapExactInputSingle(uint256)\":{\"details\":\"The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\",\"params\":{\"amountIn\":\"The exact amount of DAI that will be swapped for WETH9.\"},\"returns\":{\"amountOut\":\"The amount of WETH9 received.\"}},\"swapExactOutputSingle(uint256,uint256)\":{\"details\":\"The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.\",\"params\":{\"amountInMaximum\":\"The amount of DAI we are willing to spend to receive the specified amount of WETH9.\",\"amountOut\":\"The exact amount of WETH9 to receive from the swap.\"},\"returns\":{\"amountIn\":\"The amount of DAI actually spent in the swap.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapExactInputSingle(uint256)\":{\"notice\":\"swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\"},\"swapExactOutputSingle(uint256,uint256)\":{\"notice\":\"swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SwapExamples.sol\":\"SwapExamples\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"project:/contracts/SwapExamples.sol\":{\"keccak256\":\"0x13175b364e18caef3df4db36fcb68c5eb6cfd9bfdefbf2de90d1fb45ac87b90d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e8a5d508155724fd085ae23f8ee1d55d7161e255d2b2bf628dc365c08e1ec05\",\"dweb:/ipfs/QmckBinZ44Z74vXjYszKjEnogUFTwSJzu4KXpDD1T55BtB\"]}},\"version\":1}",
  "bytecode": "0x60a06040527f68b3465833fb72a70ecdf485e0e4c7bd8665fc4500000000000000000000000060805234801561003457600080fd5b5060805160601c610b8061006b6000398061015a528061022152806102c9528061032752806103d752806104975250610b806000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806389a302711161005b57806389a30271146100d5578063c31c9c07146100dd578063c4b69a18146100e5578063e0bab4c4146100f85761007d565b8063089fe6aa146100825780634aa4a4fc146100a057806373bd43ad146100b5575b600080fd5b61008a610100565b6040516100979190610b31565b60405180910390f35b6100a8610106565b6040516100979190610afb565b6100c86100c3366004610a39565b61011e565b6040516100979190610b41565b6100a86102af565b6100a86102c7565b6100c86100f3366004610a69565b6102eb565b6100a86104e5565b610bb881565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b600061014073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc23330856104fd565b61017f73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc27f0000000000000000000000000000000000000000000000000000000000000000846106c4565b604080516101008101825273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2815273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486020820152610bb88183015233606082015242608082015260a08101849052600060c082015273ffffffffffffffffffffffffffffffffffffffff60e0820181905291517f414bf38900000000000000000000000000000000000000000000000000000000815290917f0000000000000000000000000000000000000000000000000000000000000000169063414bf38990610256908490600401610b1c565b602060405180830381600087803b15801561027057600080fd5b505af1158015610284573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a89190610a51565b9392505050565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061030d736b175474e89094c44da98b954eedeac495271d0f3330856104fd565b61034c736b175474e89094c44da98b954eedeac495271d0f7f0000000000000000000000000000000000000000000000000000000000000000846106c4565b6040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26020820152610bb88183015233606082015242608082015260a0810185905260c08101849052600060e082015290517fdb3e21980000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063db3e219890610421908490600401610b1c565b602060405180830381600087803b15801561043b57600080fd5b505af115801561044f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104739190610a51565b9150828210156104de576104bd736b175474e89094c44da98b954eedeac495271d0f7f000000000000000000000000000000000000000000000000000000000000000060006106c4565b6104de736b175474e89094c44da98b954eedeac495271d0f33848603610882565b5092915050565b736b175474e89094c44da98b954eedeac495271d0f81565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b602083106105bc5780518252601f19909201916020918201910161059d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461061e576040519150601f19603f3d011682016040523d82523d6000602084013e610623565b606091505b5091509150818015610651575080511580610651575080806020019051602081101561064e57600080fd5b50515b6106bc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b6020831061077b5780518252601f19909201916020918201910161075c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146107dd576040519150601f19603f3d011682016040523d82523d6000602084013e6107e2565b606091505b5091509150818015610810575080511580610810575080806020019051602081101561080d57600080fd5b50515b61087b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5341000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b602083106109395780518252601f19909201916020918201910161091a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461099b576040519150601f19603f3d011682016040523d82523d6000602084013e6109a0565b606091505b50915091508180156109ce5750805115806109ce57508080602001905160208110156109cb57600080fd5b50515b61087b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600060208284031215610a4a578081fd5b5035919050565b600060208284031215610a62578081fd5b5051919050565b60008060408385031215610a7b578081fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015262ffffff60408301511660408401528060608301511660608401526080820151608084015260a082015160a084015260c082015160c08401528060e08301511660e0840152505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6101008101610b2b8284610a8a565b92915050565b62ffffff91909116815260200190565b9081526020019056fea2646970667358221220a854056364ba2a0e3ef4a6c2ef93935310fbd3c67e505a5beb4c5f183430a31c64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806389a302711161005b57806389a30271146100d5578063c31c9c07146100dd578063c4b69a18146100e5578063e0bab4c4146100f85761007d565b8063089fe6aa146100825780634aa4a4fc146100a057806373bd43ad146100b5575b600080fd5b61008a610100565b6040516100979190610b31565b60405180910390f35b6100a8610106565b6040516100979190610afb565b6100c86100c3366004610a39565b61011e565b6040516100979190610b41565b6100a86102af565b6100a86102c7565b6100c86100f3366004610a69565b6102eb565b6100a86104e5565b610bb881565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b600061014073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc23330856104fd565b61017f73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc27f0000000000000000000000000000000000000000000000000000000000000000846106c4565b604080516101008101825273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2815273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486020820152610bb88183015233606082015242608082015260a08101849052600060c082015273ffffffffffffffffffffffffffffffffffffffff60e0820181905291517f414bf38900000000000000000000000000000000000000000000000000000000815290917f0000000000000000000000000000000000000000000000000000000000000000169063414bf38990610256908490600401610b1c565b602060405180830381600087803b15801561027057600080fd5b505af1158015610284573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a89190610a51565b9392505050565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061030d736b175474e89094c44da98b954eedeac495271d0f3330856104fd565b61034c736b175474e89094c44da98b954eedeac495271d0f7f0000000000000000000000000000000000000000000000000000000000000000846106c4565b6040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26020820152610bb88183015233606082015242608082015260a0810185905260c08101849052600060e082015290517fdb3e21980000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063db3e219890610421908490600401610b1c565b602060405180830381600087803b15801561043b57600080fd5b505af115801561044f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104739190610a51565b9150828210156104de576104bd736b175474e89094c44da98b954eedeac495271d0f7f000000000000000000000000000000000000000000000000000000000000000060006106c4565b6104de736b175474e89094c44da98b954eedeac495271d0f33848603610882565b5092915050565b736b175474e89094c44da98b954eedeac495271d0f81565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b602083106105bc5780518252601f19909201916020918201910161059d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461061e576040519150601f19603f3d011682016040523d82523d6000602084013e610623565b606091505b5091509150818015610651575080511580610651575080806020019051602081101561064e57600080fd5b50515b6106bc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b6020831061077b5780518252601f19909201916020918201910161075c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146107dd576040519150601f19603f3d011682016040523d82523d6000602084013e6107e2565b606091505b5091509150818015610810575080511580610810575080806020019051602081101561080d57600080fd5b50515b61087b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5341000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b602083106109395780518252601f19909201916020918201910161091a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461099b576040519150601f19603f3d011682016040523d82523d6000602084013e6109a0565b606091505b50915091508180156109ce5750805115806109ce57508080602001905160208110156109cb57600080fd5b50515b61087b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600060208284031215610a4a578081fd5b5035919050565b600060208284031215610a62578081fd5b5051919050565b60008060408385031215610a7b578081fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015262ffffff60408301511660408401528060608301511660608401526080820151608084015260a082015160a084015260c082015160c08401528060e08301511660e0840152505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6101008101610b2b8284610a8a565b92915050565b62ffffff91909116815260200190565b9081526020019056fea2646970667358221220a854056364ba2a0e3ef4a6c2ef93935310fbd3c67e505a5beb4c5f183430a31c64736f6c63430007060033",
  "immutableReferences": {
    "4081": [
      {
        "length": 32,
        "start": 346
      },
      {
        "length": 32,
        "start": 545
      },
      {
        "length": 32,
        "start": 713
      },
      {
        "length": 32,
        "start": 807
      },
      {
        "length": 32,
        "start": 983
      },
      {
        "length": 32,
        "start": 1175
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2748:40",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:40",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:120:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:40"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:40"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "165:33:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "188:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "175:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "175:23:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:40",
                "type": ""
              }
            ],
            "src": "14:190:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "290:113:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "336:26:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "345:6:40"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "353:6:40"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "338:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "338:22:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "338:22:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "311:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "320:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "307:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "307:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "332:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "303:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "303:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "300:2:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "371:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "387:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "381:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "381:16:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "371:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "256:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "267:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "279:6:40",
                "type": ""
              }
            ],
            "src": "209:194:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "495:171:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "541:26:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "550:6:40"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "558:6:40"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "543:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "543:22:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "543:22:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "516:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "525:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "512:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "512:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "537:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "508:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "508:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "505:2:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "576:33:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "599:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "586:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "586:23:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "576:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "618:42:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "645:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "656:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "628:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "628:32:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "618:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "453:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "464:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "476:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "484:6:40",
                "type": ""
              }
            ],
            "src": "408:258:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "740:545:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "750:52:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "760:42:40",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "754:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "818:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "833:5:40"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "827:5:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "827:12:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "841:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "823:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "823:21:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "811:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "811:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "865:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "870:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "861:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "861:14:40"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "891:5:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "898:4:40",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "887:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "887:16:40"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "881:5:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "881:23:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "906:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "877:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "877:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "854:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "854:56:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "854:56:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "930:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "935:4:40",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "926:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "926:14:40"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "956:5:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "963:4:40",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "952:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "952:16:40"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "946:5:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "946:23:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "971:8:40",
                            "type": "",
                            "value": "0xffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "942:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "942:38:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "919:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "919:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "919:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1001:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1006:4:40",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "997:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "997:14:40"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1027:5:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1034:4:40",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1023:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1023:16:40"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "1017:5:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1017:23:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1042:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1013:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1013:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "990:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "990:56:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "990:56:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1066:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1071:4:40",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1062:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1062:14:40"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1088:5:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1095:4:40",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1084:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1084:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1078:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1078:23:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1055:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1055:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1055:47:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1122:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1127:4:40",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1118:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1118:14:40"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1144:5:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1151:4:40",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1140:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1140:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1134:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1134:23:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1111:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1111:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1111:47:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1178:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1183:4:40",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1174:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1174:14:40"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1200:5:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1207:4:40",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1196:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1196:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1190:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1190:23:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1167:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1167:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1167:47:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1234:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1239:4:40",
                            "type": "",
                            "value": "0xe0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1230:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1230:14:40"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1260:5:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1267:4:40",
                                    "type": "",
                                    "value": "0xe0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1256:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1256:16:40"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "1250:5:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1250:23:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1275:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1246:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1223:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:56:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1223:56:40"
                }
              ]
            },
            "name": "abi_encode_t_struct$_ExactInputSingleParams",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "724:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "731:3:40",
                "type": ""
              }
            ],
            "src": "671:614:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1391:125:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1401:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1413:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1424:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1409:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1409:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1401:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1443:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1458:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1466:42:40",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1454:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1454:55:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1436:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1436:74:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1436:74:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1360:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1371:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1382:4:40",
                "type": ""
              }
            ],
            "src": "1290:226:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1642:125:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1652:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1664:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1675:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1660:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1660:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1652:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1694:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1709:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1717:42:40",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1705:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1705:55:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1687:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1687:74:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1687:74:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ISwapRouter_$3386__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1611:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1622:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1633:4:40",
                "type": ""
              }
            ],
            "src": "1521:246:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1953:114:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1963:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1975:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1986:3:40",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1971:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1971:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1963:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2043:6:40"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2051:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_ExactInputSingleParams",
                      "nodeType": "YulIdentifier",
                      "src": "1999:43:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1999:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1999:62:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$3314_memory_ptr__to_t_struct$_ExactInputSingleParams_$3314_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1922:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1933:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1944:4:40",
                "type": ""
              }
            ],
            "src": "1772:295:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2255:114:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2265:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2277:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2288:3:40",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2273:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2273:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2265:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2345:6:40"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2353:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_ExactInputSingleParams",
                      "nodeType": "YulIdentifier",
                      "src": "2301:43:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2301:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2301:62:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ExactOutputSingleParams_$3358_memory_ptr__to_t_struct$_ExactOutputSingleParams_$3358_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2224:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2235:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2246:4:40",
                "type": ""
              }
            ],
            "src": "2072:297:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2473:91:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2483:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2495:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2506:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2491:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2491:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2483:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2525:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2540:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2548:8:40",
                            "type": "",
                            "value": "0xffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2536:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2536:21:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2518:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2518:40:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2518:40:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2442:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2453:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2464:4:40",
                "type": ""
              }
            ],
            "src": "2374:190:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2670:76:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2680:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2692:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2703:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2688:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2680:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2722:9:40"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2733:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2715:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2715:25:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2715:25:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2639:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2650:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2661:4:40",
                "type": ""
              }
            ],
            "src": "2569:177:40"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_t_struct$_ExactInputSingleParams(value, pos)\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), 0xffffff))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), _1))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        mstore(add(pos, 0xc0), mload(add(value, 0xc0)))\n        mstore(add(pos, 0xe0), and(mload(add(value, 0xe0)), _1))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_ISwapRouter_$3386__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$3314_memory_ptr__to_t_struct$_ExactInputSingleParams_$3314_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        abi_encode_t_struct$_ExactInputSingleParams(value0, headStart)\n    }\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$3358_memory_ptr__to_t_struct$_ExactOutputSingleParams_$3358_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        abi_encode_t_struct$_ExactInputSingleParams(value0, headStart)\n    }\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 40,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "231:4934:37:-:0;;;691:106;;;1245:21;;;;;;;;;;231:4934;;;;;;;;;;;",
  "deployedSourceMap": "231:4934:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1201:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;982:74;;;:::i;:::-;;;;;;;:::i;1736:1190::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1062:73::-;;;:::i;691:106::-;;;:::i;3554:1609::-;;;;;;:::i;:::-;;:::i;904:72::-;;;:::i;1201:37::-;1234:4;1201:37;:::o;982:74::-;1014:42;982:74;:::o;1736:1190::-;1802:17;1947:75;1014:42;1986:10;2006:4;2013:8;1947:31;:75::i;:::-;2077:64;1014:42;2119:10;2132:8;2077:26;:64::i;:::-;2452:348;;;;;;;;1014:42;2452:348;;1093:42;2452:348;;;;1234:4;2452:348;;;;2610:10;2452:348;;;;2648:15;2452:348;;;;;;;;;;2389:48;2452:348;;;;;;;;;;;2884:35;;;;;2452:348;;2884:10;:27;;;;:35;;2452:348;;2884:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2872:47;1736:1190;-1:-1:-1;;;1736:1190:37:o;1062:73::-;1093:42;1062:73;:::o;691:106::-;;;:::o;3554:1609::-;3647:16;3741:80;934:42;3778:10;3798:4;3805:15;3741:31;:80::i;:::-;4047:69;934:42;4087:10;4100:15;4047:26;:69::i;:::-;4191:352;;;;;;;;934:42;4191:352;;1014:42;4191:352;;;;1234:4;4191:352;;;;4349:10;4191:352;;;;4387:15;4191:352;;;;;;;;;;;;;;;;4127:49;4191:352;;;;4667:36;;;;;:10;4191:352;4667:28;;;;:36;;4191:352;;4667:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4656:47;;4974:15;4963:8;:26;4959:198;;;5005:55;934:42;5045:10;5058:1;5005:26;:55::i;:::-;5074:72;934:42;5107:10;5137:8;5119:15;:26;5074:27;:72::i;:::-;3554:1609;;;;;:::o;904:72::-;934:42;904:72;:::o;561:358:36:-;759:69;;;748:10;759:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:28;759:69;;;748:81;;;;701:12;;;;748:10;;;;759:69;748:81;;;759:69;748:81;;759:69;748:81;;;;;;;;;;-1:-1:-1;;748:81:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;-1:-1:-1;859:11:36;;:16;;:44;;;890:4;879:24;;;;;;;;;;;;;;;-1:-1:-1;879:24:36;859:44;839:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561:358;;;;;;:::o;1873:307::-;2032:58;;;2021:10;2032:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2055:23;2032:58;;;2021:70;;;;1986:12;;;;2021:10;;;;2032:58;2021:70;;;2032:58;2021:70;;2032:58;2021:70;;;;;;;;;;-1:-1:-1;;2021:70:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;-1:-1:-1;2121:11:36;;:16;;:44;;;2152:4;2141:24;;;;;;;;;;;;;;;-1:-1:-1;2141:24:36;2121:44;2101:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1873:307;;;;;:::o;1211:309::-;1371:59;;;1360:10;1371:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1394:24;1371:59;;;1360:71;;;;1325:12;;;;1360:10;;;;1371:59;1360:71;;;1371:59;1360:71;;1371:59;1360:71;;;;;;;;;;-1:-1:-1;;1360:71:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;-1:-1:-1;1461:11:36;;:16;;:44;;;1492:4;1481:24;;;;;;;;;;;;;;;-1:-1:-1;1481:24:36;1461:44;1441:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:190:40;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;-1:-1:-1;175:23:40;;84:120;-1:-1:-1;84:120:40:o;209:194::-;;332:2;320:9;311:7;307:23;303:32;300:2;;;353:6;345;338:22;300:2;-1:-1:-1;381:16:40;;290:113;-1:-1:-1;290:113:40:o;408:258::-;;;537:2;525:9;516:7;512:23;508:32;505:2;;;558:6;550;543:22;505:2;-1:-1:-1;;586:23:40;;;656:2;641:18;;;628:32;;-1:-1:-1;495:171:40:o;671:614::-;760:42;841:2;833:5;827:12;823:21;818:3;811:34;906:2;898:4;891:5;887:16;881:23;877:32;870:4;865:3;861:14;854:56;971:8;963:4;956:5;952:16;946:23;942:38;935:4;930:3;926:14;919:62;1042:2;1034:4;1027:5;1023:16;1017:23;1013:32;1006:4;1001:3;997:14;990:56;1095:4;1088:5;1084:16;1078:23;1071:4;1066:3;1062:14;1055:47;1151:4;1144:5;1140:16;1134:23;1127:4;1122:3;1118:14;1111:47;1207:4;1200:5;1196:16;1190:23;1183:4;1178:3;1174:14;1167:47;1275:2;1267:4;1260:5;1256:16;1250:23;1246:32;1239:4;1234:3;1230:14;1223:56;;740:545;;:::o;1290:226::-;1466:42;1454:55;;;;1436:74;;1424:2;1409:18;;1391:125::o;1772:295::-;1986:3;1971:19;;1999:62;1975:9;2043:6;1999:62;:::i;:::-;1953:114;;;;:::o;2374:190::-;2548:8;2536:21;;;;2518:40;;2506:2;2491:18;;2473:91::o;2569:177::-;2715:25;;;2703:2;2688:18;;2670:76::o",
  "source": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\n\ncontract SwapExamples {\n    // For the scope of these swap examples,\n    // we will detail the design considerations when using\n    // `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.\n\n    // It should be noted that for the sake of these examples, we purposefully pass in the swap router instead of inherit the swap router for simplicity.\n    // More advanced example contracts will detail how to inherit the swap router safely.\n\n    ISwapRouter public immutable swapRouter = ISwapRouter(address(0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45));\n\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.\n\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n    address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n    address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\n\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant poolFee = 3000;\n\n    constructor() {\n    }\n\n    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\n    /// @return amountOut The amount of WETH9 received.\n    function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {\n        // msg.sender must approve this contract\n\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(WETH9, msg.sender, address(this), amountIn);\n\n        // Approve the router to spend DAI.\n        TransferHelper.safeApprove(WETH9, address(swapRouter), amountIn);\n\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter.ExactInputSingleParams memory params =\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: WETH9,\n                tokenOut: USDC,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 2 ** 160 - 1\n            });\n\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n\n    /// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n    /// @param amountOut The exact amount of WETH9 to receive from the swap.\n    /// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n    /// @return amountIn The amount of DAI actually spent in the swap.\n    function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum);\n\n        // Approve the router to spend the specifed `amountInMaximum` of DAI.\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);\n\n        ISwapRouter.ExactOutputSingleParams memory params =\n            ISwapRouter.ExactOutputSingleParams({\n                tokenIn: DAI,\n                tokenOut: WETH9,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountOut: amountOut,\n                amountInMaximum: amountInMaximum,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountIn = swapRouter.exactOutputSingle(params);\n\n        // For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n        if (amountIn < amountInMaximum) {\n            TransferHelper.safeApprove(DAI, address(swapRouter), 0);\n            TransferHelper.safeTransfer(DAI, msg.sender, amountInMaximum - amountIn);\n        }\n    }\n}",
  "sourcePath": "C:\\Users\\LeoDu\\Documents\\UniLimit\\contracts\\SwapExamples.sol",
  "ast": {
    "absolutePath": "project:/contracts/SwapExamples.sol",
    "exportedSymbols": {
      "IERC20": [
        1057
      ],
      "ISwapRouter": [
        3386
      ],
      "IUniswapV3SwapCallback": [
        1405
      ],
      "SwapExamples": [
        4247
      ],
      "TransferHelper": [
        4068
      ]
    },
    "id": 4248,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4070,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:37"
      },
      {
        "id": 4071,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "69:19:37"
      },
      {
        "absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "id": 4072,
        "nodeType": "ImportDirective",
        "scope": 4248,
        "sourceUnit": 4069,
        "src": "90:70:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "id": 4073,
        "nodeType": "ImportDirective",
        "scope": 4248,
        "sourceUnit": 3387,
        "src": "161:68:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4247,
        "linearizedBaseContracts": [
          4247
        ],
        "name": "SwapExamples",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c31c9c07",
            "id": 4081,
            "mutability": "immutable",
            "name": "swapRouter",
            "nodeType": "VariableDeclaration",
            "scope": 4247,
            "src": "691:106:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$3386",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 4074,
              "name": "ISwapRouter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3386,
              "src": "691:11:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                "typeString": "contract ISwapRouter"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307836386233343635383333666237324137306563444634383545306534433762443836363546633435",
                      "id": 4078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "753:42:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    ],
                    "id": 4077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "745:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 4076,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "745:7:37",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 4079,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "745:51:37",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 4075,
                "name": "ISwapRouter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3386,
                "src": "733:11:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$3386_$",
                  "typeString": "type(contract ISwapRouter)"
                }
              },
              "id": 4080,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "733:64:37",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e0bab4c4",
            "id": 4084,
            "mutability": "constant",
            "name": "DAI",
            "nodeType": "VariableDeclaration",
            "scope": 4247,
            "src": "904:72:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4082,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "904:7:37",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 4083,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "934:42:37",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "4aa4a4fc",
            "id": 4087,
            "mutability": "constant",
            "name": "WETH9",
            "nodeType": "VariableDeclaration",
            "scope": 4247,
            "src": "982:74:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4085,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "982:7:37",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 4086,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1014:42:37",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "89a30271",
            "id": 4090,
            "mutability": "constant",
            "name": "USDC",
            "nodeType": "VariableDeclaration",
            "scope": 4247,
            "src": "1062:73:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4088,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1062:7:37",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
              "id": 4089,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1093:42:37",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "089fe6aa",
            "id": 4093,
            "mutability": "constant",
            "name": "poolFee",
            "nodeType": "VariableDeclaration",
            "scope": 4247,
            "src": "1201:37:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 4091,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "1201:6:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "value": {
              "hexValue": "33303030",
              "id": 4092,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1234:4:37",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000_by_1",
                "typeString": "int_const 3000"
              },
              "value": "3000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4096,
              "nodeType": "Block",
              "src": "1259:7:37",
              "statements": []
            },
            "id": 4097,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1256:2:37"
            },
            "returnParameters": {
              "id": 4095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:0:37"
            },
            "scope": 4247,
            "src": "1245:21:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4158,
              "nodeType": "Block",
              "src": "1821:1105:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4108,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4087,
                        "src": "1979:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4109,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1986:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1986:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4113,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2006:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapExamples_$4247",
                              "typeString": "contract SwapExamples"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapExamples_$4247",
                              "typeString": "contract SwapExamples"
                            }
                          ],
                          "id": 4112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1998:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4111,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1998:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1998:13:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4115,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4100,
                        "src": "2013:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4105,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4068,
                        "src": "1947:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$4068_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 4107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3949,
                      "src": "1947:31:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 4116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1947:75:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4117,
                  "nodeType": "ExpressionStatement",
                  "src": "1947:75:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4121,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4087,
                        "src": "2104:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4124,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4081,
                            "src": "2119:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 4123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2111:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2111:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2111:19:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4126,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4100,
                        "src": "2132:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4118,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4068,
                        "src": "2077:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$4068_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 4120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4041,
                      "src": "2077:26:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2077:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4128,
                  "nodeType": "ExpressionStatement",
                  "src": "2077:64:37"
                },
                {
                  "assignments": [
                    4132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4132,
                      "mutability": "mutable",
                      "name": "params",
                      "nodeType": "VariableDeclaration",
                      "scope": 4158,
                      "src": "2389:48:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$3314_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 4131,
                        "name": "ISwapRouter.ExactInputSingleParams",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3314,
                        "src": "2389:34:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$3314_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4150,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4135,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4087,
                        "src": "2514:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4136,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4090,
                        "src": "2547:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4137,
                        "name": "poolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4093,
                        "src": "2574:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 4138,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2610:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2610:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 4140,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2648:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2648:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4142,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4100,
                        "src": "2691:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2735:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2975"
                        },
                        "id": 4148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                            "typeString": "int_const 1461...(41 digits omitted)...2976"
                          },
                          "id": 4146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 4144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2773:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "313630",
                            "id": 4145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2778:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_160_by_1",
                              "typeString": "int_const 160"
                            },
                            "value": "160"
                          },
                          "src": "2773:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                            "typeString": "int_const 1461...(41 digits omitted)...2976"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 4147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2784:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2773:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2975"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2975"
                        }
                      ],
                      "expression": {
                        "id": 4133,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3386,
                        "src": "2452:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$3386_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 4134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3314,
                      "src": "2452:34:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$3314_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 4149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2452:348:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$3314_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2389:411:37"
                },
                {
                  "expression": {
                    "id": 4156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4151,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4103,
                      "src": "2872:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4154,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4132,
                          "src": "2912:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$3314_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$3314_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                          }
                        ],
                        "expression": {
                          "id": 4152,
                          "name": "swapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4081,
                          "src": "2884:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        "id": 4153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exactInputSingle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3322,
                        "src": "2884:27:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$3314_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                        }
                      },
                      "id": 4155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2884:35:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2872:47:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4157,
                  "nodeType": "ExpressionStatement",
                  "src": "2872:47:37"
                }
              ]
            },
            "documentation": {
              "id": 4098,
              "nodeType": "StructuredDocumentation",
              "src": "1272:459:37",
              "text": "@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."
            },
            "functionSelector": "73bd43ad",
            "id": 4159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactInputSingle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4100,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 4159,
                  "src": "1766:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1765:18:37"
            },
            "returnParameters": {
              "id": 4104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4103,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 4159,
                  "src": "1802:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1801:19:37"
            },
            "scope": 4247,
            "src": "1736:1190:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4245,
              "nodeType": "Block",
              "src": "3665:1498:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4172,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4084,
                        "src": "3773:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3778:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3778:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4177,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3798:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapExamples_$4247",
                              "typeString": "contract SwapExamples"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapExamples_$4247",
                              "typeString": "contract SwapExamples"
                            }
                          ],
                          "id": 4176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3790:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4175,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3790:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3790:13:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4179,
                        "name": "amountInMaximum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4164,
                        "src": "3805:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4169,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4068,
                        "src": "3741:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$4068_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 4171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3949,
                      "src": "3741:31:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 4180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3741:80:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4181,
                  "nodeType": "ExpressionStatement",
                  "src": "3741:80:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4185,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4084,
                        "src": "4074:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4188,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4081,
                            "src": "4087:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 4187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4079:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4079:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4079:19:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4190,
                        "name": "amountInMaximum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4164,
                        "src": "4100:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4182,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4068,
                        "src": "4047:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$4068_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 4184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4041,
                      "src": "4047:26:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4047:69:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4192,
                  "nodeType": "ExpressionStatement",
                  "src": "4047:69:37"
                },
                {
                  "assignments": [
                    4196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4196,
                      "mutability": "mutable",
                      "name": "params",
                      "nodeType": "VariableDeclaration",
                      "scope": 4245,
                      "src": "4127:49:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3358_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                      },
                      "typeName": {
                        "id": 4195,
                        "name": "ISwapRouter.ExactOutputSingleParams",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3358,
                        "src": "4127:35:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3358_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4210,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4199,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4084,
                        "src": "4254:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4200,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4087,
                        "src": "4285:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4201,
                        "name": "poolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4093,
                        "src": "4313:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 4202,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4349:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4349:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 4204,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4387:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4387:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4206,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4162,
                        "src": "4431:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4207,
                        "name": "amountInMaximum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4164,
                        "src": "4475:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4527:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 4197,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3386,
                        "src": "4191:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$3386_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 4198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactOutputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3358,
                      "src": "4191:35:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$3358_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
                      }
                    },
                    "id": 4209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountOut",
                      "amountInMaximum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4191:352:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3358_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4127:416:37"
                },
                {
                  "expression": {
                    "id": 4216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4211,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4167,
                      "src": "4656:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4214,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4196,
                          "src": "4696:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3358_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3358_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                          }
                        ],
                        "expression": {
                          "id": 4212,
                          "name": "swapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4081,
                          "src": "4667:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        "id": 4213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exactOutputSingle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3366,
                        "src": "4667:28:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$3358_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
                        }
                      },
                      "id": 4215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4667:36:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4656:47:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4217,
                  "nodeType": "ExpressionStatement",
                  "src": "4656:47:37"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4218,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4167,
                      "src": "4963:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 4219,
                      "name": "amountInMaximum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4164,
                      "src": "4974:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4963:26:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4244,
                  "nodeType": "IfStatement",
                  "src": "4959:198:37",
                  "trueBody": {
                    "id": 4243,
                    "nodeType": "Block",
                    "src": "4991:166:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4224,
                              "name": "DAI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4084,
                              "src": "5032:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 4227,
                                  "name": "swapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4081,
                                  "src": "5045:10:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                                    "typeString": "contract ISwapRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                                    "typeString": "contract ISwapRouter"
                                  }
                                ],
                                "id": 4226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5037:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4225,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5037:7:37",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5037:19:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 4229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5058:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 4221,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4068,
                              "src": "5005:14:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$4068_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 4223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4041,
                            "src": "5005:26:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 4230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5005:55:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4231,
                        "nodeType": "ExpressionStatement",
                        "src": "5005:55:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4235,
                              "name": "DAI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4084,
                              "src": "5102:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 4236,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5107:3:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5107:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4238,
                                "name": "amountInMaximum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4164,
                                "src": "5119:15:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 4239,
                                "name": "amountIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4167,
                                "src": "5137:8:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5119:26:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4232,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4068,
                              "src": "5074:14:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$4068_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 4234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3995,
                            "src": "5074:27:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 4241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5074:72:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4242,
                        "nodeType": "ExpressionStatement",
                        "src": "5074:72:37"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4160,
              "nodeType": "StructuredDocumentation",
              "src": "2932:617:37",
              "text": "@notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of WETH9 to receive from the swap.\n @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n @return amountIn The amount of DAI actually spent in the swap."
            },
            "functionSelector": "c4b69a18",
            "id": 4246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactOutputSingle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4162,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 4246,
                  "src": "3585:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3585:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4164,
                  "mutability": "mutable",
                  "name": "amountInMaximum",
                  "nodeType": "VariableDeclaration",
                  "scope": 4246,
                  "src": "3604:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3604:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3584:44:37"
            },
            "returnParameters": {
              "id": 4168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4167,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 4246,
                  "src": "3647:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3647:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3646:18:37"
            },
            "scope": 4247,
            "src": "3554:1609:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4248,
        "src": "231:4934:37"
      }
    ],
    "src": "45:5120:37"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SwapExamples.sol",
      "exportedSymbols": {
        "IERC20": [
          1057
        ],
        "ISwapRouter": [
          3386
        ],
        "IUniswapV3SwapCallback": [
          1405
        ],
        "SwapExamples": [
          4247
        ],
        "TransferHelper": [
          4068
        ]
      },
      "license": "GPL-2.0-or-later"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "=",
            "0.7",
            ".6"
          ]
        },
        "id": 4070,
        "name": "PragmaDirective",
        "src": "45:23:37"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 4071,
        "name": "PragmaDirective",
        "src": "69:19:37"
      },
      {
        "attributes": {
          "SourceUnit": 4069,
          "absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
          "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
          "scope": 4248,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 4072,
        "name": "ImportDirective",
        "src": "90:70:37"
      },
      {
        "attributes": {
          "SourceUnit": 3387,
          "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
          "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
          "scope": 4248,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 4073,
        "name": "ImportDirective",
        "src": "161:68:37"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            4247
          ],
          "name": "SwapExamples",
          "scope": 4248
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "functionSelector": "c31c9c07",
              "mutability": "immutable",
              "name": "swapRouter",
              "scope": 4247,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ISwapRouter",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ISwapRouter",
                  "referencedDeclaration": 3386,
                  "type": "contract ISwapRouter"
                },
                "id": 4074,
                "name": "UserDefinedTypeName",
                "src": "691:11:37"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "contract ISwapRouter",
                  "type_conversion": true
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3386,
                      "type": "type(contract ISwapRouter)",
                      "value": "ISwapRouter"
                    },
                    "id": 4075,
                    "name": "Identifier",
                    "src": "733:11:37"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "isStructConstructorCall": false,
                      "lValueRequested": false,
                      "names": [
                        null
                      ],
                      "tryCall": false,
                      "type": "address",
                      "type_conversion": true
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "type(address)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address"
                            },
                            "id": 4076,
                            "name": "ElementaryTypeName",
                            "src": "745:7:37"
                          }
                        ],
                        "id": 4077,
                        "name": "ElementaryTypeNameExpression",
                        "src": "745:7:37"
                      },
                      {
                        "attributes": {
                          "hexvalue": "307836386233343635383333666237324137306563444634383545306534433762443836363546633435",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "number",
                          "type": "address payable",
                          "value": "0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45"
                        },
                        "id": 4078,
                        "name": "Literal",
                        "src": "753:42:37"
                      }
                    ],
                    "id": 4079,
                    "name": "FunctionCall",
                    "src": "745:51:37"
                  }
                ],
                "id": 4080,
                "name": "FunctionCall",
                "src": "733:64:37"
              }
            ],
            "id": 4081,
            "name": "VariableDeclaration",
            "src": "691:106:37"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "e0bab4c4",
              "mutability": "constant",
              "name": "DAI",
              "scope": 4247,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 4082,
                "name": "ElementaryTypeName",
                "src": "904:7:37"
              },
              {
                "attributes": {
                  "hexvalue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
                },
                "id": 4083,
                "name": "Literal",
                "src": "934:42:37"
              }
            ],
            "id": 4084,
            "name": "VariableDeclaration",
            "src": "904:72:37"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "4aa4a4fc",
              "mutability": "constant",
              "name": "WETH9",
              "scope": 4247,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 4085,
                "name": "ElementaryTypeName",
                "src": "982:7:37"
              },
              {
                "attributes": {
                  "hexvalue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                },
                "id": 4086,
                "name": "Literal",
                "src": "1014:42:37"
              }
            ],
            "id": 4087,
            "name": "VariableDeclaration",
            "src": "982:74:37"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "89a30271",
              "mutability": "constant",
              "name": "USDC",
              "scope": 4247,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 4088,
                "name": "ElementaryTypeName",
                "src": "1062:7:37"
              },
              {
                "attributes": {
                  "hexvalue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
                },
                "id": 4089,
                "name": "Literal",
                "src": "1093:42:37"
              }
            ],
            "id": 4090,
            "name": "VariableDeclaration",
            "src": "1062:73:37"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "089fe6aa",
              "mutability": "constant",
              "name": "poolFee",
              "scope": 4247,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint24",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint24",
                  "type": "uint24"
                },
                "id": 4091,
                "name": "ElementaryTypeName",
                "src": "1201:6:37"
              },
              {
                "attributes": {
                  "hexvalue": "33303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 3000",
                  "value": "3000"
                },
                "id": 4092,
                "name": "Literal",
                "src": "1234:4:37"
              }
            ],
            "id": 4093,
            "name": "VariableDeclaration",
            "src": "1201:37:37"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 4247,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 4094,
                "name": "ParameterList",
                "src": "1256:2:37"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 4095,
                "name": "ParameterList",
                "src": "1259:0:37"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 4096,
                "name": "Block",
                "src": "1259:7:37"
              }
            ],
            "id": 4097,
            "name": "FunctionDefinition",
            "src": "1245:21:37"
          },
          {
            "attributes": {
              "functionSelector": "73bd43ad",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "swapExactInputSingle",
              "scope": 4247,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."
                },
                "id": 4098,
                "name": "StructuredDocumentation",
                "src": "1272:459:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "scope": 4159,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 4099,
                        "name": "ElementaryTypeName",
                        "src": "1766:7:37"
                      }
                    ],
                    "id": 4100,
                    "name": "VariableDeclaration",
                    "src": "1766:16:37"
                  }
                ],
                "id": 4101,
                "name": "ParameterList",
                "src": "1765:18:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "scope": 4159,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 4102,
                        "name": "ElementaryTypeName",
                        "src": "1802:7:37"
                      }
                    ],
                    "id": 4103,
                    "name": "VariableDeclaration",
                    "src": "1802:17:37"
                  }
                ],
                "id": 4104,
                "name": "ParameterList",
                "src": "1801:19:37"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeTransferFrom",
                              "referencedDeclaration": 3949,
                              "type": "function (address,address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4068,
                                  "type": "type(library TransferHelper)",
                                  "value": "TransferHelper"
                                },
                                "id": 4105,
                                "name": "Identifier",
                                "src": "1947:14:37"
                              }
                            ],
                            "id": 4107,
                            "name": "MemberAccess",
                            "src": "1947:31:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4087,
                              "type": "address",
                              "value": "WETH9"
                            },
                            "id": 4108,
                            "name": "Identifier",
                            "src": "1979:5:37"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 4109,
                                "name": "Identifier",
                                "src": "1986:3:37"
                              }
                            ],
                            "id": 4110,
                            "name": "MemberAccess",
                            "src": "1986:10:37"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SwapExamples_$4247",
                                      "typeString": "contract SwapExamples"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 4111,
                                    "name": "ElementaryTypeName",
                                    "src": "1998:7:37"
                                  }
                                ],
                                "id": 4112,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1998:7:37"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract SwapExamples",
                                  "value": "this"
                                },
                                "id": 4113,
                                "name": "Identifier",
                                "src": "2006:4:37"
                              }
                            ],
                            "id": 4114,
                            "name": "FunctionCall",
                            "src": "1998:13:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4100,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 4115,
                            "name": "Identifier",
                            "src": "2013:8:37"
                          }
                        ],
                        "id": 4116,
                        "name": "FunctionCall",
                        "src": "1947:75:37"
                      }
                    ],
                    "id": 4117,
                    "name": "ExpressionStatement",
                    "src": "1947:75:37"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeApprove",
                              "referencedDeclaration": 4041,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4068,
                                  "type": "type(library TransferHelper)",
                                  "value": "TransferHelper"
                                },
                                "id": 4118,
                                "name": "Identifier",
                                "src": "2077:14:37"
                              }
                            ],
                            "id": 4120,
                            "name": "MemberAccess",
                            "src": "2077:26:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4087,
                              "type": "address",
                              "value": "WETH9"
                            },
                            "id": 4121,
                            "name": "Identifier",
                            "src": "2104:5:37"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                                      "typeString": "contract ISwapRouter"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 4122,
                                    "name": "ElementaryTypeName",
                                    "src": "2111:7:37"
                                  }
                                ],
                                "id": 4123,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2111:7:37"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4081,
                                  "type": "contract ISwapRouter",
                                  "value": "swapRouter"
                                },
                                "id": 4124,
                                "name": "Identifier",
                                "src": "2119:10:37"
                              }
                            ],
                            "id": 4125,
                            "name": "FunctionCall",
                            "src": "2111:19:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4100,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 4126,
                            "name": "Identifier",
                            "src": "2132:8:37"
                          }
                        ],
                        "id": 4127,
                        "name": "FunctionCall",
                        "src": "2077:64:37"
                      }
                    ],
                    "id": 4128,
                    "name": "ExpressionStatement",
                    "src": "2077:64:37"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        4132
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "params",
                          "scope": 4158,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct ISwapRouter.ExactInputSingleParams",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "ISwapRouter.ExactInputSingleParams",
                              "referencedDeclaration": 3314,
                              "type": "struct ISwapRouter.ExactInputSingleParams"
                            },
                            "id": 4131,
                            "name": "UserDefinedTypeName",
                            "src": "2389:34:37"
                          }
                        ],
                        "id": 4132,
                        "name": "VariableDeclaration",
                        "src": "2389:48:37"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "tokenIn",
                            "tokenOut",
                            "fee",
                            "recipient",
                            "deadline",
                            "amountIn",
                            "amountOutMinimum",
                            "sqrtPriceLimitX96"
                          ],
                          "tryCall": false,
                          "type": "struct ISwapRouter.ExactInputSingleParams memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
                                  "typeString": "int_const 1461...(41 digits omitted)...2975"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ExactInputSingleParams",
                              "referencedDeclaration": 3314,
                              "type": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3386,
                                  "type": "type(contract ISwapRouter)",
                                  "value": "ISwapRouter"
                                },
                                "id": 4133,
                                "name": "Identifier",
                                "src": "2452:11:37"
                              }
                            ],
                            "id": 4134,
                            "name": "MemberAccess",
                            "src": "2452:34:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4087,
                              "type": "address",
                              "value": "WETH9"
                            },
                            "id": 4135,
                            "name": "Identifier",
                            "src": "2514:5:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4090,
                              "type": "address",
                              "value": "USDC"
                            },
                            "id": 4136,
                            "name": "Identifier",
                            "src": "2547:4:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4093,
                              "type": "uint24",
                              "value": "poolFee"
                            },
                            "id": 4137,
                            "name": "Identifier",
                            "src": "2574:7:37"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 4138,
                                "name": "Identifier",
                                "src": "2610:3:37"
                              }
                            ],
                            "id": 4139,
                            "name": "MemberAccess",
                            "src": "2610:10:37"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967292,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 4140,
                                "name": "Identifier",
                                "src": "2648:5:37"
                              }
                            ],
                            "id": 4141,
                            "name": "MemberAccess",
                            "src": "2648:15:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4100,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 4142,
                            "name": "Identifier",
                            "src": "2691:8:37"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 4143,
                            "name": "Literal",
                            "src": "2735:1:37"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
                                "typeString": "int_const 1461...(41 digits omitted)...2975"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "operator": "-",
                              "type": "int_const 1461...(41 digits omitted)...2975"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                                    "typeString": "int_const 1461...(41 digits omitted)...2976"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "operator": "**",
                                  "type": "int_const 1461...(41 digits omitted)...2976"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "hexvalue": "32",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 2",
                                      "value": "2"
                                    },
                                    "id": 4144,
                                    "name": "Literal",
                                    "src": "2773:1:37"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "313630",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 160",
                                      "value": "160"
                                    },
                                    "id": 4145,
                                    "name": "Literal",
                                    "src": "2778:3:37"
                                  }
                                ],
                                "id": 4146,
                                "name": "BinaryOperation",
                                "src": "2773:8:37"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 4147,
                                "name": "Literal",
                                "src": "2784:1:37"
                              }
                            ],
                            "id": 4148,
                            "name": "BinaryOperation",
                            "src": "2773:12:37"
                          }
                        ],
                        "id": 4149,
                        "name": "FunctionCall",
                        "src": "2452:348:37"
                      }
                    ],
                    "id": 4150,
                    "name": "VariableDeclarationStatement",
                    "src": "2389:411:37"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4103,
                              "type": "uint256",
                              "value": "amountOut"
                            },
                            "id": 4151,
                            "name": "Identifier",
                            "src": "2872:9:37"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$3314_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "exactInputSingle",
                                  "referencedDeclaration": 3322,
                                  "type": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4081,
                                      "type": "contract ISwapRouter",
                                      "value": "swapRouter"
                                    },
                                    "id": 4152,
                                    "name": "Identifier",
                                    "src": "2884:10:37"
                                  }
                                ],
                                "id": 4153,
                                "name": "MemberAccess",
                                "src": "2884:27:37"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4132,
                                  "type": "struct ISwapRouter.ExactInputSingleParams memory",
                                  "value": "params"
                                },
                                "id": 4154,
                                "name": "Identifier",
                                "src": "2912:6:37"
                              }
                            ],
                            "id": 4155,
                            "name": "FunctionCall",
                            "src": "2884:35:37"
                          }
                        ],
                        "id": 4156,
                        "name": "Assignment",
                        "src": "2872:47:37"
                      }
                    ],
                    "id": 4157,
                    "name": "ExpressionStatement",
                    "src": "2872:47:37"
                  }
                ],
                "id": 4158,
                "name": "Block",
                "src": "1821:1105:37"
              }
            ],
            "id": 4159,
            "name": "FunctionDefinition",
            "src": "1736:1190:37"
          },
          {
            "attributes": {
              "functionSelector": "c4b69a18",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "swapExactOutputSingle",
              "scope": 4247,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of WETH9 to receive from the swap.\n @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n @return amountIn The amount of DAI actually spent in the swap."
                },
                "id": 4160,
                "name": "StructuredDocumentation",
                "src": "2932:617:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "scope": 4246,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 4161,
                        "name": "ElementaryTypeName",
                        "src": "3585:7:37"
                      }
                    ],
                    "id": 4162,
                    "name": "VariableDeclaration",
                    "src": "3585:17:37"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountInMaximum",
                      "scope": 4246,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 4163,
                        "name": "ElementaryTypeName",
                        "src": "3604:7:37"
                      }
                    ],
                    "id": 4164,
                    "name": "VariableDeclaration",
                    "src": "3604:23:37"
                  }
                ],
                "id": 4165,
                "name": "ParameterList",
                "src": "3584:44:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "scope": 4246,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 4166,
                        "name": "ElementaryTypeName",
                        "src": "3647:7:37"
                      }
                    ],
                    "id": 4167,
                    "name": "VariableDeclaration",
                    "src": "3647:16:37"
                  }
                ],
                "id": 4168,
                "name": "ParameterList",
                "src": "3646:18:37"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeTransferFrom",
                              "referencedDeclaration": 3949,
                              "type": "function (address,address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4068,
                                  "type": "type(library TransferHelper)",
                                  "value": "TransferHelper"
                                },
                                "id": 4169,
                                "name": "Identifier",
                                "src": "3741:14:37"
                              }
                            ],
                            "id": 4171,
                            "name": "MemberAccess",
                            "src": "3741:31:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4084,
                              "type": "address",
                              "value": "DAI"
                            },
                            "id": 4172,
                            "name": "Identifier",
                            "src": "3773:3:37"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 4173,
                                "name": "Identifier",
                                "src": "3778:3:37"
                              }
                            ],
                            "id": 4174,
                            "name": "MemberAccess",
                            "src": "3778:10:37"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SwapExamples_$4247",
                                      "typeString": "contract SwapExamples"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 4175,
                                    "name": "ElementaryTypeName",
                                    "src": "3790:7:37"
                                  }
                                ],
                                "id": 4176,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3790:7:37"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract SwapExamples",
                                  "value": "this"
                                },
                                "id": 4177,
                                "name": "Identifier",
                                "src": "3798:4:37"
                              }
                            ],
                            "id": 4178,
                            "name": "FunctionCall",
                            "src": "3790:13:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4164,
                              "type": "uint256",
                              "value": "amountInMaximum"
                            },
                            "id": 4179,
                            "name": "Identifier",
                            "src": "3805:15:37"
                          }
                        ],
                        "id": 4180,
                        "name": "FunctionCall",
                        "src": "3741:80:37"
                      }
                    ],
                    "id": 4181,
                    "name": "ExpressionStatement",
                    "src": "3741:80:37"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeApprove",
                              "referencedDeclaration": 4041,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4068,
                                  "type": "type(library TransferHelper)",
                                  "value": "TransferHelper"
                                },
                                "id": 4182,
                                "name": "Identifier",
                                "src": "4047:14:37"
                              }
                            ],
                            "id": 4184,
                            "name": "MemberAccess",
                            "src": "4047:26:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4084,
                              "type": "address",
                              "value": "DAI"
                            },
                            "id": 4185,
                            "name": "Identifier",
                            "src": "4074:3:37"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                                      "typeString": "contract ISwapRouter"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 4186,
                                    "name": "ElementaryTypeName",
                                    "src": "4079:7:37"
                                  }
                                ],
                                "id": 4187,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4079:7:37"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4081,
                                  "type": "contract ISwapRouter",
                                  "value": "swapRouter"
                                },
                                "id": 4188,
                                "name": "Identifier",
                                "src": "4087:10:37"
                              }
                            ],
                            "id": 4189,
                            "name": "FunctionCall",
                            "src": "4079:19:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4164,
                              "type": "uint256",
                              "value": "amountInMaximum"
                            },
                            "id": 4190,
                            "name": "Identifier",
                            "src": "4100:15:37"
                          }
                        ],
                        "id": 4191,
                        "name": "FunctionCall",
                        "src": "4047:69:37"
                      }
                    ],
                    "id": 4192,
                    "name": "ExpressionStatement",
                    "src": "4047:69:37"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        4196
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "params",
                          "scope": 4245,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct ISwapRouter.ExactOutputSingleParams",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "ISwapRouter.ExactOutputSingleParams",
                              "referencedDeclaration": 3358,
                              "type": "struct ISwapRouter.ExactOutputSingleParams"
                            },
                            "id": 4195,
                            "name": "UserDefinedTypeName",
                            "src": "4127:35:37"
                          }
                        ],
                        "id": 4196,
                        "name": "VariableDeclaration",
                        "src": "4127:49:37"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "tokenIn",
                            "tokenOut",
                            "fee",
                            "recipient",
                            "deadline",
                            "amountOut",
                            "amountInMaximum",
                            "sqrtPriceLimitX96"
                          ],
                          "tryCall": false,
                          "type": "struct ISwapRouter.ExactOutputSingleParams memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ExactOutputSingleParams",
                              "referencedDeclaration": 3358,
                              "type": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3386,
                                  "type": "type(contract ISwapRouter)",
                                  "value": "ISwapRouter"
                                },
                                "id": 4197,
                                "name": "Identifier",
                                "src": "4191:11:37"
                              }
                            ],
                            "id": 4198,
                            "name": "MemberAccess",
                            "src": "4191:35:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4084,
                              "type": "address",
                              "value": "DAI"
                            },
                            "id": 4199,
                            "name": "Identifier",
                            "src": "4254:3:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4087,
                              "type": "address",
                              "value": "WETH9"
                            },
                            "id": 4200,
                            "name": "Identifier",
                            "src": "4285:5:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4093,
                              "type": "uint24",
                              "value": "poolFee"
                            },
                            "id": 4201,
                            "name": "Identifier",
                            "src": "4313:7:37"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 4202,
                                "name": "Identifier",
                                "src": "4349:3:37"
                              }
                            ],
                            "id": 4203,
                            "name": "MemberAccess",
                            "src": "4349:10:37"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967292,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 4204,
                                "name": "Identifier",
                                "src": "4387:5:37"
                              }
                            ],
                            "id": 4205,
                            "name": "MemberAccess",
                            "src": "4387:15:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4162,
                              "type": "uint256",
                              "value": "amountOut"
                            },
                            "id": 4206,
                            "name": "Identifier",
                            "src": "4431:9:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4164,
                              "type": "uint256",
                              "value": "amountInMaximum"
                            },
                            "id": 4207,
                            "name": "Identifier",
                            "src": "4475:15:37"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 4208,
                            "name": "Literal",
                            "src": "4527:1:37"
                          }
                        ],
                        "id": 4209,
                        "name": "FunctionCall",
                        "src": "4191:352:37"
                      }
                    ],
                    "id": 4210,
                    "name": "VariableDeclarationStatement",
                    "src": "4127:416:37"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4167,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 4211,
                            "name": "Identifier",
                            "src": "4656:8:37"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3358_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "exactOutputSingle",
                                  "referencedDeclaration": 3366,
                                  "type": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4081,
                                      "type": "contract ISwapRouter",
                                      "value": "swapRouter"
                                    },
                                    "id": 4212,
                                    "name": "Identifier",
                                    "src": "4667:10:37"
                                  }
                                ],
                                "id": 4213,
                                "name": "MemberAccess",
                                "src": "4667:28:37"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4196,
                                  "type": "struct ISwapRouter.ExactOutputSingleParams memory",
                                  "value": "params"
                                },
                                "id": 4214,
                                "name": "Identifier",
                                "src": "4696:6:37"
                              }
                            ],
                            "id": 4215,
                            "name": "FunctionCall",
                            "src": "4667:36:37"
                          }
                        ],
                        "id": 4216,
                        "name": "Assignment",
                        "src": "4656:47:37"
                      }
                    ],
                    "id": 4217,
                    "name": "ExpressionStatement",
                    "src": "4656:47:37"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4167,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 4218,
                            "name": "Identifier",
                            "src": "4963:8:37"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4164,
                              "type": "uint256",
                              "value": "amountInMaximum"
                            },
                            "id": 4219,
                            "name": "Identifier",
                            "src": "4974:15:37"
                          }
                        ],
                        "id": 4220,
                        "name": "BinaryOperation",
                        "src": "4963:26:37"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "safeApprove",
                                      "referencedDeclaration": 4041,
                                      "type": "function (address,address,uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4068,
                                          "type": "type(library TransferHelper)",
                                          "value": "TransferHelper"
                                        },
                                        "id": 4221,
                                        "name": "Identifier",
                                        "src": "5005:14:37"
                                      }
                                    ],
                                    "id": 4223,
                                    "name": "MemberAccess",
                                    "src": "5005:26:37"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4084,
                                      "type": "address",
                                      "value": "DAI"
                                    },
                                    "id": 4224,
                                    "name": "Identifier",
                                    "src": "5032:3:37"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_ISwapRouter_$3386",
                                              "typeString": "contract ISwapRouter"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "address"
                                            },
                                            "id": 4225,
                                            "name": "ElementaryTypeName",
                                            "src": "5037:7:37"
                                          }
                                        ],
                                        "id": 4226,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "5037:7:37"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4081,
                                          "type": "contract ISwapRouter",
                                          "value": "swapRouter"
                                        },
                                        "id": 4227,
                                        "name": "Identifier",
                                        "src": "5045:10:37"
                                      }
                                    ],
                                    "id": 4228,
                                    "name": "FunctionCall",
                                    "src": "5037:19:37"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 4229,
                                    "name": "Literal",
                                    "src": "5058:1:37"
                                  }
                                ],
                                "id": 4230,
                                "name": "FunctionCall",
                                "src": "5005:55:37"
                              }
                            ],
                            "id": 4231,
                            "name": "ExpressionStatement",
                            "src": "5005:55:37"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "safeTransfer",
                                      "referencedDeclaration": 3995,
                                      "type": "function (address,address,uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4068,
                                          "type": "type(library TransferHelper)",
                                          "value": "TransferHelper"
                                        },
                                        "id": 4232,
                                        "name": "Identifier",
                                        "src": "5074:14:37"
                                      }
                                    ],
                                    "id": 4234,
                                    "name": "MemberAccess",
                                    "src": "5074:27:37"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4084,
                                      "type": "address",
                                      "value": "DAI"
                                    },
                                    "id": 4235,
                                    "name": "Identifier",
                                    "src": "5102:3:37"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 4236,
                                        "name": "Identifier",
                                        "src": "5107:3:37"
                                      }
                                    ],
                                    "id": 4237,
                                    "name": "MemberAccess",
                                    "src": "5107:10:37"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "-",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4164,
                                          "type": "uint256",
                                          "value": "amountInMaximum"
                                        },
                                        "id": 4238,
                                        "name": "Identifier",
                                        "src": "5119:15:37"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4167,
                                          "type": "uint256",
                                          "value": "amountIn"
                                        },
                                        "id": 4239,
                                        "name": "Identifier",
                                        "src": "5137:8:37"
                                      }
                                    ],
                                    "id": 4240,
                                    "name": "BinaryOperation",
                                    "src": "5119:26:37"
                                  }
                                ],
                                "id": 4241,
                                "name": "FunctionCall",
                                "src": "5074:72:37"
                              }
                            ],
                            "id": 4242,
                            "name": "ExpressionStatement",
                            "src": "5074:72:37"
                          }
                        ],
                        "id": 4243,
                        "name": "Block",
                        "src": "4991:166:37"
                      }
                    ],
                    "id": 4244,
                    "name": "IfStatement",
                    "src": "4959:198:37"
                  }
                ],
                "id": 4245,
                "name": "Block",
                "src": "3665:1498:37"
              }
            ],
            "id": 4246,
            "name": "FunctionDefinition",
            "src": "3554:1609:37"
          }
        ],
        "id": 4247,
        "name": "ContractDefinition",
        "src": "231:4934:37"
      }
    ],
    "id": 4248,
    "name": "SourceUnit",
    "src": "45:5120:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x6815ccEA8af29a3871398aB4Bdf44d677d6d988f",
      "transactionHash": "0x996379a8dc13f71aa2bd72c2b43b696df6eeedbaab1f2feaa344652b3c8f26d0"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-14T12:27:09.803Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "swapExactInputSingle(uint256)": {
        "details": "The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.",
        "params": {
          "amountIn": "The exact amount of DAI that will be swapped for WETH9."
        },
        "returns": {
          "amountOut": "The amount of WETH9 received."
        }
      },
      "swapExactOutputSingle(uint256,uint256)": {
        "details": "The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.",
        "params": {
          "amountInMaximum": "The amount of DAI we are willing to spend to receive the specified amount of WETH9.",
          "amountOut": "The exact amount of WETH9 to receive from the swap."
        },
        "returns": {
          "amountIn": "The amount of DAI actually spent in the swap."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "swapExactInputSingle(uint256)": {
        "notice": "swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router."
      },
      "swapExactOutputSingle(uint256,uint256)": {
        "notice": "swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH."
      }
    },
    "version": 1
  }
}